name: CI/CD - Deploy Mongo App to GKE

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  GCP_PROJECT: ${{ vars.GCP_PROJECT }}
  GKE_CLUSTER: ${{ vars.GKE_CLUSTER }}
  GKE_ZONE: ${{ vars.GKE_ZONE }}
  ARTIFACT_REGISTRY_LOCATION: ${{ vars.ARTIFACT_REGISTRY_LOCATION }}
  ARTIFACT_REGISTRY_REPOSITORY: ${{ vars.ARTIFACT_REGISTRY_REPOSITORY }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build & Deploy to GKE

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Setup Google Cloud CLI
      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      # Step 3: Configure Docker for Artifact Registry
      - name: Configure Docker auth
        run: gcloud auth configure-docker ${{ env.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev --quiet

      # Step 4: Build and push Docker image
      - name: Build and Push Docker image to Artifact Registry
        run: |
          IMAGE_URI=${{ env.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.ARTIFACT_REGISTRY_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
          echo "Building image: $IMAGE_URI"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      # Step 5: Get GKE credentials
      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} \
            --zone ${{ env.GKE_ZONE }} \
            --project ${{ env.GCP_PROJECT }}

      # Step 6: Deploy to GKE
      - name: Deploy Mongo and App to GKE
        run: |
          kubectl apply -f k8s/mongo-deployment.yaml
          kubectl apply -f k8s/mongo-service.yaml
          kubectl apply -f k8s/app-deployment.yaml
          kubectl apply -f k8s/app-service.yaml

      # Step 7: Verify Deployment Rollouts
      - name: Verify deployment rollout
        run: |
          kubectl rollout status deployment/mongo-deployment
          kubectl rollout status deployment/app-deployment

      # Step 8: Get Service Info
      - name: Get service info
        run: kubectl get svc -o wide
